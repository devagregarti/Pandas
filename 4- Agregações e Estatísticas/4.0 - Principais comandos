# üêç Pandas ‚Äì Agrega√ß√£o Estat√≠stica

A agrega√ß√£o estat√≠stica no **Pandas** permite extrair informa√ß√µes resumidas sobre os dados de um **DataFrame** ou **Series** ‚Äî como m√©dias, somas, contagens, desvios, valores m√°ximos, etc.

---

## üì¶ Importa√ß√£o e exemplo de base de dados

```python
import pandas as pd

# Criando um DataFrame de exemplo
dados = {
    'Categoria': ['A', 'A', 'B', 'B', 'C', 'C', 'C'],
    'Valor': [10, 15, 10, 20, 30, 25, 20],
    'Quantidade': [1, 2, 1, 3, 5, 2, 4]
}

df = pd.DataFrame(dados)
print(df)
```

Sa√≠da:
```
  Categoria  Valor  Quantidade
0         A     10           1
1         A     15           2
2         B     10           1
3         B     20           3
4         C     30           5
5         C     25           2
6         C     20           4
```

---

## üî¢ M√©todos Estat√≠sticos Principais

Esses m√©todos podem ser usados diretamente em um **DataFrame** ou **Series**.

| Fun√ß√£o | Descri√ß√£o |
|--------|------------|
| `.sum()` | Soma dos valores |
| `.mean()` | M√©dia aritm√©tica |
| `.median()` | Mediana |
| `.mode()` | Moda |
| `.min()` | Valor m√≠nimo |
| `.max()` | Valor m√°ximo |
| `.count()` | Contagem de valores n√£o nulos |
| `.std()` | Desvio padr√£o |
| `.var()` | Vari√¢ncia |
| `.quantile(q)` | Quantil (ex: `q=0.25` para o primeiro quartil) |
| `.prod()` | Produto dos valores |
| `.cumsum()` | Soma cumulativa |
| `.cumprod()` | Produto cumulativo |
| `.nunique()` | N√∫mero de valores √∫nicos |
| `.describe()` | Estat√≠sticas descritivas completas |

---

## üßÆ Exemplos b√°sicos

```python
df['Valor'].sum()          # Soma total dos valores
df['Valor'].mean()         # M√©dia
df['Valor'].median()       # Mediana
df['Valor'].std()          # Desvio padr√£o
df['Valor'].min(), df['Valor'].max()
```

---

## üìä Estat√≠sticas por grupo (groupby)

O `groupby()` permite calcular estat√≠sticas separadas por categoria.

```python
df.groupby('Categoria')['Valor'].mean()
```

Resultado:
```
Categoria
A    12.5
B    15.0
C    25.0
Name: Valor, dtype: float64
```

Voc√™ pode aplicar v√°rias fun√ß√µes de uma s√≥ vez:

```python
df.groupby('Categoria')['Valor'].agg(['mean', 'sum', 'count', 'max'])
```

Sa√≠da:
```
           mean  sum  count  max
Categoria
A          12.5   25      2   15
B          15.0   30      2   20
C          25.0   75      3   30
```

---

## ‚öôÔ∏è Usando fun√ß√µes personalizadas no `agg()`

Voc√™ pode criar fun√ß√µes pr√≥prias e aplicar:

```python
def amplitude(x):
    return x.max() - x.min()

df.groupby('Categoria')['Valor'].agg(['mean', amplitude])
```

---

## üß© Agrega√ß√£o m√∫ltipla em v√°rias colunas

```python
df.groupby('Categoria').agg({
    'Valor': ['mean', 'max', 'min'],
    'Quantidade': ['sum', 'count']
})
```

---

## üß± Estat√≠sticas descritivas completas

```python
df.describe()
```

Sa√≠da (para colunas num√©ricas):
```
          Valor  Quantidade
count   7.000000    7.000000
mean   18.571429    2.571429
std     7.042397    1.718249
min    10.000000    1.000000
25%    12.500000    1.500000
50%    20.000000    2.000000
75%    25.000000    3.500000
max    30.000000    5.000000
```

Para incluir **todas as colunas** (inclusive texto):

```python
df.describe(include='all')
```

---

## üìà Agrega√ß√µes cumulativas

```python
df['soma_cumulativa'] = df['Valor'].cumsum()
df['media_cumulativa'] = df['Valor'].expanding().mean()
print(df)
```

---

## üîç Estat√≠sticas de correla√ß√£o e covari√¢ncia

```python
df.corr()   # Correla√ß√£o entre colunas num√©ricas
df.cov()    # Covari√¢ncia
```

---

## üß† Dicas √∫teis

- Use `round()` para arredondar resultados:
  ```python
  df['Valor'].mean().round(2)
  ```

- Combine com `reset_index()` ap√≥s o `groupby()` para transformar o √≠ndice em coluna:
  ```python
  df.groupby('Categoria')['Valor'].mean().reset_index()
  ```

- Ordene o resultado:
  ```python
  df.groupby('Categoria')['Valor'].mean().sort_values(ascending=False)
  ```

---

## üßæ Resumo final (para decorar)

| Tarefa | M√©todo Pandas |
|--------|----------------|
| M√©dia | `df.mean()` |
| Soma | `df.sum()` |
| Contagem | `df.count()` |
| Valor m√≠nimo | `df.min()` |
| Valor m√°ximo | `df.max()` |
| Desvio padr√£o | `df.std()` |
| Vari√¢ncia | `df.var()` |
| Quantil (ex: 25%) | `df.quantile(0.25)` |
| Valores √∫nicos | `df.nunique()` |
| Estat√≠sticas completas | `df.describe()` |
| Por grupo | `df.groupby('coluna').agg(...)` |

---

‚úÖ **Conclus√£o:**  
Os m√©todos de **agrega√ß√£o estat√≠stica do Pandas** s√£o fundamentais para an√°lise explorat√≥ria de dados.  
Com eles, voc√™ consegue **resumir, comparar e identificar padr√µes rapidamente** antes de aplicar transforma√ß√µes ou visualiza√ß√µes mais avan√ßadas.

---